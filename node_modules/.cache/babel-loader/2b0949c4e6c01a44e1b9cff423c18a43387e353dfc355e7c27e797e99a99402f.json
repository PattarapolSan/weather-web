{"ast":null,"code":"var _jsxFileName = \"/Users/pattarapol/Documents/Dev_Project/weather-app/src/component/Content.tsx\";\nimport React from 'react';\nimport './Content.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Content = props => {\n  const LoadingScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n  const riseSet = time => {\n    const timestamp = time;\n    const milliseconds = timestamp * 1000;\n    const date = new Date(milliseconds);\n    const result = date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true\n    });\n    return result;\n  };\n  const dataScreen = () => {\n    console.log('Sunrise time:', riseSet(props.data.sys.sunrise));\n    console.log('Sunset time:', riseSet(props.data.sys.sunset));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sub-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [props.data.main.temp, \" \\u02DAC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"minmax\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"H: \", Math.ceil(props.data.main.temp_max), \" \\u02DA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"L: \", Math.floor(props.data.main.temp_min), \" \\u02DA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.loading ? LoadingScreen() : dataScreen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Content","props","LoadingScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","riseSet","time","timestamp","milliseconds","date","Date","result","toLocaleTimeString","hour","minute","second","hour12","dataScreen","console","log","data","sys","sunrise","sunset","id","name","main","temp","Math","ceil","temp_max","floor","temp_min","loading","_c","$RefreshReg$"],"sources":["/Users/pattarapol/Documents/Dev_Project/weather-app/src/component/Content.tsx"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './Content.css';\n\ninterface ContextProp {\n\n}\n\nexport const Content = (props:any) => {\n    \n    \n    \n    const LoadingScreen = () => {\n        return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n      </div>\n        );\n        \n    }\n\n    const riseSet = (time:number) => {\n        const timestamp = time;\n        const milliseconds = timestamp * 1000; \n        const date = new Date(milliseconds);\n        const result = date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: true,\n            });\n        return result;\n    }\n\n    const dataScreen = () => {\n        \n\n    console.log('Sunrise time:', riseSet(props.data.sys.sunrise));\n    console.log('Sunset time:', riseSet(props.data.sys.sunset));\n        return (\n            <div id=\"sub-content\">\n                <h2>{props.data.name}</h2>\n                <h3>{props.data.main.temp} ˚C</h3>\n                <div id=\"minmax\">\n                    <p>H: {Math.ceil(props.data.main.temp_max)} ˚</p>\n                    <p>L: {Math.floor(props.data.main.temp_min)} ˚</p>\n                </div>\n                \n            </div>\n        );\n        \n    }\n\n\n    return (\n        <div id=\"content\">\n            <div>\n                {props.loading ? LoadingScreen() : dataScreen()}    \n            </div>\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}