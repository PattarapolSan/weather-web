{"ast":null,"code":"var _jsxFileName = \"/Users/pattarapol/Documents/Dev_Project/weather-app/src/Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Main.css';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TimeOfDay = /*#__PURE__*/function (TimeOfDay) {\n  TimeOfDay[\"Morning\"] = \"morning\";\n  TimeOfDay[\"Noon\"] = \"noon\";\n  TimeOfDay[\"Sunset\"] = \"sunset\";\n  TimeOfDay[\"Night\"] = \"night\";\n  return TimeOfDay;\n}(TimeOfDay || {});\nconst Main = () => {\n  _s();\n  const [timeOfDay, setTimeOfDay] = useState(TimeOfDay.Night);\n  const [address, setAddress] = useState('');\n  const [coordinate, setCoordinate] = useState({\n    lat: null,\n    long: null\n  });\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLong = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinate(latLong);\n  };\n  useEffect(() => {\n    const now = new Date();\n    const hour = now.getHours();\n    if (hour >= 6 && hour < 10) {\n      setTimeOfDay(TimeOfDay.Morning);\n    } else if (hour >= 10 && hour < 18) {\n      setTimeOfDay(TimeOfDay.Noon);\n    } else if (hour >= 18 && hour < 20) {\n      setTimeOfDay(TimeOfDay.Sunset);\n    } else {\n      setTimeOfDay(TimeOfDay.Night);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: `${timeOfDay}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: address,\n      onChange: setAddress,\n      onSelect: handleSelect,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps({\n            placeholder: 'Search Places ...',\n            className: 'location-search-input'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 27\n          }, this), suggestions.map(suggestion => {\n            const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n            // inline style for demonstration purpose\n            const style = suggestion.active ? {\n              backgroundColor: '#fafafa',\n              cursor: 'pointer'\n            } : {\n              backgroundColor: '#ffffff',\n              cursor: 'pointer'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"qgP3qmulKPuF9+N2j0rVW4QkpdQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","TimeOfDay","Main","_s","timeOfDay","setTimeOfDay","Night","address","setAddress","coordinate","setCoordinate","lat","long","handleSelect","value","results","latLong","now","Date","hour","getHours","Morning","Noon","Sunset","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","active","style","backgroundColor","cursor","description","_c","$RefreshReg$"],"sources":["/Users/pattarapol/Documents/Dev_Project/weather-app/src/Main.tsx"],"sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport './Main.css';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n  } from 'react-places-autocomplete';\n  \n  \n\n\nenum TimeOfDay {\n    Morning = 'morning',\n    Noon = 'noon',\n    Sunset = 'sunset',\n    Night = 'night'\n  }\n\n\n\nconst Main = () => {\n\n    const [timeOfDay, setTimeOfDay] = useState<TimeOfDay>(TimeOfDay.Night);\n    const [address, setAddress] = useState<string>('');\n    const [coordinate, setCoordinate] = useState<any>({\n        lat: null,\n        long: null\n    })\n\n    const handleSelect = async (value: string) => {\n        const results  = await geocodeByAddress(value);\n\n        const latLong = await getLatLng(results[0]);\n        setAddress(value);\n        setCoordinate(latLong);\n    }\n\n\n\n    useEffect(() => {\n        const now = new Date();\n        const hour = now.getHours();\n    \n        if (hour >= 6 && hour < 10) {\n          setTimeOfDay(TimeOfDay.Morning);\n        } else if (hour >= 10 && hour < 18) {\n          setTimeOfDay(TimeOfDay.Noon);\n        } else if (hour >= 18 && hour < 20) {\n          setTimeOfDay(TimeOfDay.Sunset);\n        } else {\n          setTimeOfDay(TimeOfDay.Night);\n        }\n      }, []);\n\n    \n    return (\n        <div id=\"main\" className={`${timeOfDay}`}>\n            <h1>Weather Now</h1>\n            <PlacesAutocomplete\n        value={address}\n        onChange={setAddress}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n\n        </div>\n    )\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}