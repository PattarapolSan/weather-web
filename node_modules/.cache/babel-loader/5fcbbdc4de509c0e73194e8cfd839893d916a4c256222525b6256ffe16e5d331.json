{"ast":null,"code":"var _jsxFileName = \"/Users/pattarapol/Documents/Dev_Project/weather-app/src/component/Content.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Content.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Content = props => {\n  _s();\n  const [contentVisible, setContentVisible] = useState(false);\n  useEffect(() => {\n    setContentVisible(!props.loading);\n  }, [props.loading]);\n  const LoadingScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n  const dataScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [props.data.main.temp, \" \\u02DAC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    className: contentVisible ? 'content-visible' : '',\n    children: props.loading ? LoadingScreen() : dataScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Content, \"GMKBIaMljrTBmAyB7ubla7KxMk0=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Content","props","_s","contentVisible","setContentVisible","loading","LoadingScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataScreen","data","main","temp","id","_c","$RefreshReg$"],"sources":["/Users/pattarapol/Documents/Dev_Project/weather-app/src/component/Content.tsx"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './Content.css';\n\ninterface ContextProp {\n\n}\n\nexport const Content = (props:any) => {\n    \n    const [contentVisible, setContentVisible] = useState(false);\n\n    useEffect(() => {\n        setContentVisible(!props.loading);\n      }, [props.loading]);\n    \n    \n    \n    const LoadingScreen = () => {\n        return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n      </div>\n        );\n        \n    }\n\n    const dataScreen = () => {\n        return (\n            <h2>{props.data.main.temp} ËšC</h2>\n        );\n        \n    }\n\n\n    return (\n        <div id=\"content\" className={contentVisible ? 'content-visible' : ''}>\n                {props.loading ? LoadingScreen() : dataScreen()}    \n        </div>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvB,OAAO,MAAMC,OAAO,GAAIC,KAAS,IAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZO,iBAAiB,CAAC,CAACH,KAAK,CAACI,OAAO,CAAC;EACnC,CAAC,EAAE,CAACJ,KAAK,CAACI,OAAO,CAAC,CAAC;EAIrB,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,oBACFP,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BT,OAAA;QAAKQ,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAGR,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,oBACId,OAAA;MAAAS,QAAA,GAAKP,KAAK,CAACa,IAAI,CAACC,IAAI,CAACC,IAAI,EAAC,UAAG;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAG1C,CAAC;EAGD,oBACIb,OAAA;IAAKkB,EAAE,EAAC,SAAS;IAACV,SAAS,EAAEJ,cAAc,GAAG,iBAAiB,GAAG,EAAG;IAAAK,QAAA,EAC5DP,KAAK,CAACI,OAAO,GAAGC,aAAa,CAAC,CAAC,GAAGO,UAAU,CAAC;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAAAV,EAAA,CAhCYF,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}